{"locations":[{"prefix":"/models/config.json","type":"xcd.config.ApplicationConfig"},{"prefix":"/models/routing.json","type":"xcd.routing.RoutingTable"},{"prefix":"/models/stage/","type":"xcd.staging.StageModel"},{"prefix":"/models/domain/property/","type":"xcd.domain.property.PropertyTypeModel"},{"prefix":"/models/domain/enum/","type":"xcd.domain.EnumType"},{"prefix":"/models/domain/rule/","type":"xcd.domain.DomainRule"},{"prefix":"/models/domain/query/","type":"xcd.domain.type.QueryTypeModel"},{"prefix":"/models/domain/state-machine/","type":"xcd.domain.StateMachine"},{"prefix":"/models/domain/","type":"xcd.domain.type.DomainTypeModel"},{"prefix":"/models/view/","type":"xcd.view.View"},{"prefix":"/models/layout/","type":"xcd.view.LayoutModel"},{"prefix":"/models/process/","suffix":"/view","type":"xcd.view.View"},{"prefix":"/models/process/","type":"xcd.process.Process"}],"modelDocs":{"docs":{"xcd.startup.AppState":{"propertyDocs":[{"name":"stages","typeDescription":"Array","propertyDescription":"Array with the active stage names. Default is <code>[\"default\"]<\/code>. Can be overridden by setting a system property\n      \"exceed.stages.myapp\" ( with \"myapp\" being the name of the app to set the stages for). The value must be a comma separated\n      list of stage names in that case.\n     \n      <pre title=\"system property example\">\n       -Dexeed.stages.myapp=default,prod\n      <\/pre>","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Application name.","mergeMode":null,"subTypeDocs":[]},{"name":"path","typeDescription":"String","propertyDescription":"Base path for the extension. Currently filled by the system automatically depending on whether the\n      application is running as exploded-war or not.","mergeMode":null,"subTypeDocs":[]},{"name":"extensions","typeDescription":"Array","propertyDescription":"List of extension names for this application.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"domainVersion","typeDescription":"String","propertyDescription":"Version of the current domain model. WIP","mergeMode":null,"subTypeDocs":[]},{"name":"status","typeDescription":"ApplicationStatus Enum","propertyDescription":"Application status enum.<br/>Values: OFFLINE, PRODUCTION, DEVELOPMENT","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.startup.AppState","mergeMode":"REPLACE","locationDescription":"","classDescription":"Application startup configuration."},"xcd.component.ComponentTemplate":{"propertyDocs":[{"name":"componentModel","typeDescription":"ComponentModel","propertyDescription":"Component model for this template","mergeMode":"REPLACE","subTypeDocs":["xcd.view.ComponentModel"]},{"name":"description","typeDescription":"String","propertyDescription":"Description of this template","mergeMode":null,"subTypeDocs":[]},{"name":"wizard","typeDescription":"String","propertyDescription":"Wizard component for this template.","mergeMode":null,"subTypeDocs":[]},{"name":"title","typeDescription":"String","propertyDescription":"Title for this template.","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.component.ComponentTemplate","mergeMode":"REPLACE","locationDescription":"","classDescription":"A template model to create components of a certain type within the code editor."},"xcd.process.Transition":{"propertyDocs":[{"name":"discard","typeDescription":"boolean","propertyDescription":"True if the transition discards user input, e.g. a \"Cancel\" transition.","mergeMode":null,"subTypeDocs":[]},{"name":"actionString","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description of the transition.","mergeMode":null,"subTypeDocs":[]},{"name":"action","typeDescription":"Object","propertyDescription":"Action(s) to execute for this transition.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"to","typeDescription":"String","propertyDescription":"Target state for this transition.","mergeMode":null,"subTypeDocs":[]},{"name":"confirmation","typeDescription":"Confirmation","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.process.Confirmation"]}],"type":"xcd.process.Transition","mergeMode":"REPLACE","locationDescription":"","classDescription":"A transition within a process"},"xcd.staging.QueryTypeDataSourceModel":{"propertyDocs":[{"name":"shared","typeDescription":"boolean","propertyDescription":"Is <code>true<\/code> if the data source is available to all applications under its name. Each application needs\n      to define the shared data source with the same name. The actual model for the data source will be the merge result\n      of all definitions in system application order (i.e. in order of their position within startup.json / apps).\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"domainOperations","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.domain.DomainOperations implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaService","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.schema.SchemaService implementation. The system provides\n      <code>\"defaultSchemaService\"<\/code> and <code>\"noopSchemaService\"<\/code>","mergeMode":null,"subTypeDocs":[]},{"name":"dataSource","typeDescription":"String","propertyDescription":"Name of the target data source, an actual data base data source. (currently of type \"xcd.staging.AtomikosDataSourceModel\")","mergeMode":null,"subTypeDocs":[]},{"name":"namingStrategy","typeDescription":"String","propertyDescription":"The spring bean name of a de.quinscape.exceed.runtime.domain.NamingStrategy implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaUpdate","typeDescription":"SchemaUpdateMode Enum","propertyDescription":"Controls automatic schema updates for the data source.\n      @param schemaUpdateMode<br/>Values: NONE, DUMP, UPDATE","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.staging.QueryTypeDataSourceModel","mergeMode":"DEEP","locationDescription":"","classDescription":"Data source model used for query types."},"xcd.config.DecimalConfig":{"propertyDocs":[{"name":"defaultPrecision","typeDescription":"int","propertyDescription":"Return the default precision for this application (0 = unlimited which is also the default). Beware that leaving\n      this default is bound to be the slowest solution if the numeric property is finally backed by a database.\n      <p>\n          this is not part of the bignumber.js configuration\n      <\/p>\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"MODULO_MODE","typeDescription":"ModuloMode Enum","propertyDescription":"null<br/>Values: ROUND_UP, ROUND_DOWN, ROUND_FLOOR, ROUND_HALF_EVEN, EUCLID","mergeMode":null,"subTypeDocs":[]},{"name":"CRYPTO","typeDescription":"boolean","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"ROUNDING_MODE","typeDescription":"RoundingMode Enum","propertyDescription":"null<br/>Values: ROUND_UP, ROUND_DOWN, ROUND_CEIL, ROUND_FLOOR, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_CEIL","mergeMode":null,"subTypeDocs":[]},{"name":"FORMAT","typeDescription":"DecimalFormat","propertyDescription":null,"mergeMode":"DEEP","subTypeDocs":["xcd.config.DecimalFormat"]},{"name":"EXPONENTIAL_AT","typeDescription":"Object","propertyDescription":null,"mergeMode":"DEEP","subTypeDocs":[]},{"name":"POW_PRECISION","typeDescription":"int","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"defaultDecimalPlaces","typeDescription":"int","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]}],"type":"xcd.config.DecimalConfig","mergeMode":"DEEP","locationDescription":"","classDescription":"Encapsulates the global decimal configuration. The JSON representation is compatible with the bignumber.js\n  library, but note that we are using <code>\"ROUND_DOWN\"<\/code> or <code>\"ROUND_HALF_EVEN\"<\/code> strings\n  instead of the normal numeric values / <code>BigNumber.ENUM_VAR<\/code> configuration.\n  <p>\n  <a href=\"http://mikemcl.github.io/bignumber.js/#config\">Bignumber.js config documentation<\/a>"},"xcd.domain.property.DomainProperty":{"propertyDocs":[{"name":"name","typeDescription":"String","propertyDescription":"Name of the property.","mergeMode":null,"subTypeDocs":[]},{"name":"type","typeDescription":"String","propertyDescription":"Logical property type for this property.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"typeParam","typeDescription":"String","propertyDescription":"Type parameter for the property. Set for List, Map, Enum.","mergeMode":null,"subTypeDocs":[]},{"name":"required","typeDescription":"boolean","propertyDescription":"Set true if this property is required.","mergeMode":null,"subTypeDocs":[]},{"name":"maxLength","typeDescription":"int","propertyDescription":"Maximum length for this property if applicable.","mergeMode":null,"subTypeDocs":[]},{"name":"defaultValue","typeDescription":"String","propertyDescription":"Default value expression for this property.","mergeMode":null,"subTypeDocs":[]},{"name":"data","typeDescription":"Object","propertyDescription":"Arbitrary JSON user data field. Not used by the system. Can be used to link source ids for model generation.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"foreignKey","typeDescription":"ForeignKeyDefinition","propertyDescription":"Foreign key definition for this property.","mergeMode":"REPLACE","subTypeDocs":["xcd.domain.property.ForeignKeyDefinition"]},{"name":"description","typeDescription":"String","propertyDescription":"Description of the property.","mergeMode":null,"subTypeDocs":[]},{"name":"unique","typeDescription":"boolean","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"config","typeDescription":"Map key ->  Map","propertyDescription":"Extended parameter type configuration map.","mergeMode":"REPLACE","subTypeDocs":[]}],"type":"xcd.domain.property.DomainProperty","mergeMode":"REPLACE","locationDescription":"","classDescription":"Property within a domain type. A field in a database table if the domain storage is a database storage.\n  Might be something else."},"xcd.view.LayoutModel":{"propertyDocs":[{"name":"root","typeDescription":"ComponentModel","propertyDescription":"Layout root component. When a view uses a layout, its root content gets replaced by the layout root content.\n     \n      The view starts rendering starts with the <code>\"root\"<\/code> content.\n     \n      At the position of each &lt;Content/&gt; component within, the corresponding content block from the view will be\n      rendered.","mergeMode":"REPLACE","subTypeDocs":["xcd.view.ComponentModel"]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"context","typeDescription":"ContextModel","propertyDescription":"Context model for the layout. The layout context is special in that it is a prototypic context. Each property\n      defined here will exists in every view the layout is used in without any connection between them.","mergeMode":"REPLACE","subTypeDocs":["xcd.context.ContextModel"]}],"type":"xcd.view.LayoutModel","mergeMode":"REPLACE","locationDescription":"/models/layout/","classDescription":"Reusable top level layout definition model. The default layout for the application is defined in the application model.\n  Views can override the default by providing a layout prop to their root View component."},"xcd.domain.type.QueryTypeModel":{"propertyDocs":[{"name":"data","typeDescription":"Object","propertyDescription":"Returns arbitrary user data associated with this query type model. Can be used by alternate storage configuration\n      for a query type.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"parameterTypes","typeDescription":"Array of DomainProperty","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.domain.property.DomainProperty"]},{"name":"columnTypes","typeDescription":"Array of DomainProperty","propertyDescription":"Property type definitions for the columns of the SQL query.","mergeMode":"REPLACE","subTypeDocs":["xcd.domain.property.DomainProperty"]},{"name":"query","typeDescription":"String","propertyDescription":"Returns the SQL query for this query type model.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"count","typeDescription":"String","propertyDescription":"Count expression to evaluate instead of executing a separate count query.","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description for this query type.","mergeMode":null,"subTypeDocs":[]},{"name":"sqlQueryFactory","typeDescription":"String","propertyDescription":"Returns a class name of a org.springframework.jdbc.object.SqlQuery implementation used for\n      querying the results of this query type model.\n      \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"countQuery","typeDescription":"String","propertyDescription":"Query to provide the maximum unpaginated row count available to the main query.","mergeMode":null,"subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the query type. Should start With a \"Q\" followed by an uppercase letter.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"queryParameterProvider","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.domain.QueryTypeParameterProvider implementation.\n      Default is <code>\"defaultQueryParameterProvider\"<\/code>","mergeMode":null,"subTypeDocs":[]},{"name":"pkFields","typeDescription":"Array","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":[]},{"name":"updateHandlerName","typeDescription":"String","propertyDescription":"Spring bean name of an QueryTypeUpdateHandler implementation to use to update rows of this query type.\n      Default if <code>null<\/code>, disabling updating.","mergeMode":null,"subTypeDocs":[]},{"name":"dataSource","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]}],"type":"xcd.domain.type.QueryTypeModel","mergeMode":"REPLACE","locationDescription":"/models/domain/query/","classDescription":"A domain type based on an SQL query."},"xcd.staging.JOOQDataSourceModel":{"propertyDocs":[{"name":"shared","typeDescription":"boolean","propertyDescription":"Is <code>true<\/code> if the data source is available to all applications under its name. Each application needs\n      to define the shared data source with the same name. The actual model for the data source will be the merge result\n      of all definitions in system application order (i.e. in order of their position within startup.json / apps).\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"dialect","typeDescription":"SQLDialect Enum","propertyDescription":"JOOQ sql dialect<br/>Values: SQL99, DEFAULT, CUBRID, DERBY, FIREBIRD, H2, HSQLDB, MARIADB, MYSQL, POSTGRES, POSTGRES_9_3, POSTGRES_9_4, SQLITE","mergeMode":null,"subTypeDocs":[]},{"name":"domainOperations","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.domain.DomainOperations implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaService","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.schema.SchemaService implementation. The system provides\n      <code>\"defaultSchemaService\"<\/code> and <code>\"noopSchemaService\"<\/code>","mergeMode":null,"subTypeDocs":[]},{"name":"dataSource","typeDescription":"String","propertyDescription":"Name of the target data source, an actual data base data source. (currently of type \"xcd.staging.AtomikosDataSourceModel\")","mergeMode":null,"subTypeDocs":[]},{"name":"namingStrategy","typeDescription":"String","propertyDescription":"The spring bean name of a de.quinscape.exceed.runtime.domain.NamingStrategy implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaUpdate","typeDescription":"SchemaUpdateMode Enum","propertyDescription":"Controls automatic schema updates for the data source.\n      @param schemaUpdateMode<br/>Values: NONE, DUMP, UPDATE","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.staging.JOOQDataSourceModel","mergeMode":"DEEP","locationDescription":"","classDescription":"A JOOQ-based SQL data source. It encapsulates additional JOOQ related objects for a referenced target data source."},"xcd.process.DecisionModel":{"propertyDocs":[{"name":"expression","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"transition","typeDescription":"Transition","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.process.Transition"]}],"type":"xcd.process.DecisionModel","mergeMode":"REPLACE","locationDescription":"","classDescription":null},"xcd.staging.StageModel":{"propertyDocs":[{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"dataSources","typeDescription":"Map key -> AbstractDataSourceModel","propertyDescription":"Contain models for the data-sources of the application.\n      \n      @param dataSourceModels","mergeMode":"DEEP","subTypeDocs":["xcd.staging.JOOQDataSourceModel","xcd.staging.AtomikosDataSourceModel","xcd.staging.QueryTypeDataSourceModel"]}],"type":"xcd.staging.StageModel","mergeMode":"DEEP","locationDescription":"/models/stage/","classDescription":null},"xcd.config.BaseTemplateConfig":{"propertyDocs":[{"name":"CONTENT_AFTER","typeDescription":"String","propertyDescription":"Additional content to add after layout root.","mergeMode":null,"subTypeDocs":[]},{"name":"HEAD","typeDescription":"String","propertyDescription":"Additional &lt;head&gt; html","mergeMode":null,"subTypeDocs":[]},{"name":"CONTENT_BEFORE","typeDescription":"String","propertyDescription":"Additional content to add before layout root.","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.config.BaseTemplateConfig","mergeMode":"DEEP","locationDescription":"","classDescription":"Configures constants in the base template. The configuration options listed here are those of the default base template.\n  You can use arbitrary property names here for your own base templates."},"xcd.domain.type.DomainTypeModel":{"propertyDocs":[{"name":"description","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the domain type. Should be start with an upper case letter.","mergeMode":null,"subTypeDocs":[]},{"name":"dataSource","typeDescription":"String","propertyDescription":"The exceed data source to use for this domain type. Default is \"defaultDataSource\"","mergeMode":null,"subTypeDocs":[]},{"name":"pkFields","typeDescription":"Array of String","propertyDescription":"List of properties that form the primary key for this type.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"properties","typeDescription":"Array of DomainProperty","propertyDescription":"List of properties for this domain type.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":["xcd.domain.property.DomainProperty"]}],"type":"xcd.domain.type.DomainTypeModel","mergeMode":"REPLACE","locationDescription":"/models/domain/","classDescription":"Represents an domain entity type within an exceed application.\n \n  The persistent JSON output for this model generated by  {@link de.quinscape.exceed.runtime.model.ModelJSONServiceImpl#toJSON(Object)}."},"xcd.component.ComponentDescriptor":{"propertyDocs":[{"name":"templates","typeDescription":"Array of ComponentTemplate","propertyDescription":"Template models for this component","mergeMode":"REPLACE","subTypeDocs":["xcd.component.ComponentTemplate"]},{"name":"queryTransformer","typeDescription":"String","propertyDescription":"Bean name of a de.quinscape.exceed.runtime.expression.query.QueryTransformer implementation\n      (Default is \"componentQueryTransformer\")\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"classes","typeDescription":"Array","propertyDescription":"Component classification for this component. The classes are used to determine eligibility for completion or\n      to activate view renderer features.\n      <p>\n          The class \"model-aware\" will cause the model and viewModel to be injected into the component.\n      <\/p>","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description for the component.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"childRule","typeDescription":"Expression","propertyDescription":"Completion rule to find all eligible children for this component. The general mechanism is to find all child candidates\n      with this rule and then use a potential parentRule on the child to validate the candidate status.","mergeMode":null,"subTypeDocs":[]},{"name":"componentPropWizards","typeDescription":"Map key -> ComponentPropWizard","propertyDescription":"Maps the prop name to the a component prop wizard definition for that prop.","mergeMode":"REPLACE","subTypeDocs":["xcd.component.ComponentPropWizard"]},{"name":"queries","typeDescription":"queryName","propertyDescription":"Query definitions for this component. The result of the query will show up in the component data block under\n      the defined query name.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"parentRule","typeDescription":"Expression","propertyDescription":"Validation rule to validate if a component is valid in a parent context.\n     \n      @see #childRule","mergeMode":null,"subTypeDocs":[]},{"name":"providesContext","typeDescription":"String","propertyDescription":"Defines the symbolic type name of the context provided by this component. Other components can receive that component type either\n      by inheriting it from the first parent to offer any context or by specifying a context type they depend on.","mergeMode":null,"subTypeDocs":[]},{"name":"propTypes","typeDescription":"Map propName -> PropDeclaration","propertyDescription":"Maps prop names to PropDeclarations for this component.","mergeMode":"REPLACE","subTypeDocs":["xcd.component.PropDeclaration"]},{"name":"vars","typeDescription":"Map key ->  Map","propertyDescription":"Var definitions for this component","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"dataProvider","typeDescription":"String","propertyDescription":"Name of spring bean implementing the DataProvider interface to use as an alternate data provider to use for this component.\n      The default is to use QueryDataProvider.","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.component.ComponentDescriptor","mergeMode":"REPLACE","locationDescription":"","classDescription":"Descriptor for a single component within a component package. It contains a formal description of component properties and\n  their types. It is used by the server side to compose components in the editor, to provide the declared queries and call the declared\n  data providers and by the client-side view-renderer module to render a method producing a reactjs component tree from the\n  JSON model description of the view.\n \n  @see ComponentPackageDescriptor\n  @see PropDeclaration"},"xcd.process.ViewState":{"propertyDocs":[{"name":"transitions","typeDescription":"Map transitionName -> Transition","propertyDescription":"Transitions for this view state.","mergeMode":"REPLACE","subTypeDocs":["xcd.process.Transition"]}],"type":"xcd.process.ViewState","mergeMode":"REPLACE","locationDescription":"","classDescription":"A view state within a process. Corresponds with a process view model."},"xcd.domain.property.PropertyTypeModel":{"propertyDocs":[{"name":"defaultLength","typeDescription":"int","propertyDescription":"Default length for this property type.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"converter","typeDescription":"String","propertyDescription":"Returns the class name of either a PropertyConverter or PropertyConverterFactory implementation.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"defaultConfig","typeDescription":"Map key ->  Map","propertyDescription":"Default configuration map for this property type model.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.domain.property.PropertyTypeModel","mergeMode":"REPLACE","locationDescription":"/models/domain/property/","classDescription":"THe logical property types within the application."},"xcd.process.Confirmation":{"propertyDocs":[{"name":"title","typeDescription":"String","propertyDescription":"Title expression.","mergeMode":null,"subTypeDocs":[]},{"name":"message","typeDescription":"String","propertyDescription":"Message expression for this confirmation.","mergeMode":null,"subTypeDocs":[]},{"name":"okLabel","typeDescription":"String","propertyDescription":"OK-label expression for this confirmation. It is good UI practice to label confirmations with the actual operation\n      being done instead of just \"Ok\"","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.process.Confirmation","mergeMode":"REPLACE","locationDescription":"","classDescription":"Configuration for automatic transition confirmation dialogs."},"xcd.component.ComponentPackageDescriptor":{"propertyDocs":[{"name":"components","typeDescription":"Map componentName -> ComponentDescriptor","propertyDescription":"Returns the a map mapping component names to the component descriptors for that component.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":["xcd.component.ComponentDescriptor"]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description for the component package.\n      \n      ","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.component.ComponentPackageDescriptor","mergeMode":"REPLACE","locationDescription":"components.json declarations","classDescription":"Contains component descriptions for all components in a component package directory. It is the result of parsing a\n  \"components.json\" file.\n  <p>\n  The package descriptor differs from the other top level models in that it is not subject to composition by the\n  ModelCompositionService but is handled by ComponentRegistryImpl.\n  <\/p>\n  <p>\n  It describes component\n  <\/p>"},"xcd.component.ComponentPropWizard":{"propertyDocs":[{"name":"title","typeDescription":"String","propertyDescription":"Title for the prop wizard component\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description for the prop wizard\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"wizard","typeDescription":"String","propertyDescription":"Wizard Component js name.\n      ","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.component.ComponentPropWizard","mergeMode":"REPLACE","locationDescription":"","classDescription":"A wizard component definition for the component."},"xcd.context.ContextModel":{"propertyDocs":[{"name":"properties","typeDescription":"Map propertyName -> ScopedPropertyModel","propertyDescription":"List of properties for this context.","mergeMode":"DEEP","subTypeDocs":["xcd.context.ScopedPropertyModel"]}],"type":"xcd.context.ContextModel","mergeMode":"DEEP","locationDescription":"","classDescription":"Model for a scoped context (e.g. application context, session context, process context etc)."},"xcd.domain.DomainRule":{"propertyDocs":[{"name":"errorMessage","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"rule","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"target","typeDescription":"DomainProperty","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.domain.property.DomainProperty"]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.domain.DomainRule","mergeMode":"REPLACE","locationDescription":"/models/domain/rule/","classDescription":"Declares a reusable and composable domain rule. WIP"},"xcd.process.DecisionState":{"propertyDocs":[{"name":"decisions","typeDescription":"Array of DecisionModel","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.process.DecisionModel"]},{"name":"defaultTransition","typeDescription":"Transition","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.process.Transition"]}],"type":"xcd.process.DecisionState","mergeMode":"REPLACE","locationDescription":"","classDescription":"A decision state within a process,\n  <p>\n      A series of decisions is considered in definition order, each having an expression attribute taking a value expression\n      and a transition to execute in case that expression evaluates to <code>true<\/code>.\n  <\/p>\n  <p>\n      If none of the decision transitions is taken, the default transition is used.\n  <\/p>"},"xcd.staging.AbstractDataSourceModel":{"propertyDocs":[{"name":"shared","typeDescription":"boolean","propertyDescription":"Is <code>true<\/code> if the data source is available to all applications under its name. Each application needs\n      to define the shared data source with the same name. The actual model for the data source will be the merge result\n      of all definitions in system application order (i.e. in order of their position within startup.json / apps).\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"dataSourceFactoryName","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"domainOperations","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.domain.DomainOperations implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaService","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.schema.SchemaService implementation. The system provides\n      <code>\"defaultSchemaService\"<\/code> and <code>\"noopSchemaService\"<\/code>","mergeMode":null,"subTypeDocs":[]},{"name":"namingStrategy","typeDescription":"String","propertyDescription":"The spring bean name of a de.quinscape.exceed.runtime.domain.NamingStrategy implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaUpdate","typeDescription":"SchemaUpdateMode Enum","propertyDescription":"Controls automatic schema updates for the data source.\n      @param schemaUpdateMode<br/>Values: NONE, DUMP, UPDATE","mergeMode":null,"subTypeDocs":[]},{"name":"primary","typeDescription":"boolean","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]}],"type":"xcd.staging.AbstractDataSourceModel","mergeMode":"DEEP","locationDescription":"","classDescription":"Abstract base model for the supported data source models."},"xcd.process.ProcessState":{"propertyDocs":[],"type":"xcd.process.ProcessState","mergeMode":"REPLACE","locationDescription":"","classDescription":null},"xcd.routing.Mapping":{"propertyDocs":[{"name":"viewName","typeDescription":"String","propertyDescription":"The view name mapped to this location. Mutually exclusive with <code>processName<\/code>.","mergeMode":null,"subTypeDocs":[]},{"name":"processName","typeDescription":"String","propertyDescription":"The process name mapped to this location. Mutually exclusive with <code>viewName<\/code>.","mergeMode":null,"subTypeDocs":[]},{"name":"classes","typeDescription":"Array","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":[]},{"name":"disabled","typeDescription":"boolean","propertyDescription":"<code>true<\/code> if the mapping is currently disabled.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"title","typeDescription":"String","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]}],"type":"xcd.routing.Mapping","mergeMode":"REPLACE","locationDescription":"","classDescription":"A single routing table mapping."},"xcd.config.DecimalFormat":{"propertyDocs":[{"name":"fractionGroupSize","typeDescription":"int","propertyDescription":"Returns the grouping size for the fractional part. If <code>0<\/code>, grouping of the integer part will be disabled, which is the default.\n      \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"groupSize","typeDescription":"int","propertyDescription":"Returns the primary grouping size of the integer part. If <code>0<\/code>, grouping of the integer part will be disabled.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"secondaryGroupSize","typeDescription":"int","propertyDescription":"Returns the secondary grouping size of the integer part\n      \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"groupSeparator","typeDescription":"String","propertyDescription":"Returns the grouping separator of the integer part.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"decimalSeparator","typeDescription":"String","propertyDescription":"Returns the decimal separator between integer part and fractional part.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"fractionGroupSeparator","typeDescription":"String","propertyDescription":"Returns the grouping separator of the fraction groups.\n     \n      ","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.config.DecimalFormat","mergeMode":"DEEP","locationDescription":"","classDescription":"Bignumber.js compatible decimal format specification."},"xcd.staging.AtomikosDataSourceModel":{"propertyDocs":[{"name":"shared","typeDescription":"boolean","propertyDescription":"Is <code>true<\/code> if the data source is available to all applications under its name. Each application needs\n      to define the shared data source with the same name. The actual model for the data source will be the merge result\n      of all definitions in system application order (i.e. in order of their position within startup.json / apps).\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"dataSourceFactoryName","typeDescription":"String","propertyDescription":"Spring bean name of the data source factory for this atomikos data source model.\n     \n      Defaults to \"atomikosDataSourceFactory\".\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"maintenanceInterval","typeDescription":"int","propertyDescription":"The maintenance interval for the pool maintenance thread. Optional.","mergeMode":null,"subTypeDocs":[]},{"name":"defaultIsolationLevel","typeDescription":"int","propertyDescription":"Gets the default isolation level for connections created by this datasource.","mergeMode":null,"subTypeDocs":[]},{"name":"xaDataSourceClassName","typeDescription":"String","propertyDescription":"The fully qualified underlying XADataSource class name. Required.","mergeMode":null,"subTypeDocs":[]},{"name":"maxIdleTime","typeDescription":"int","propertyDescription":"The maximum amount of seconds that unused excess connections should stay in the pool. Optional.\n     \n      The default is 60 seconds.","mergeMode":null,"subTypeDocs":[]},{"name":"maxLifetime","typeDescription":"int","propertyDescription":"The maximum amount of seconds that a connection is kept in the pool before\n      it is destroyed automatically. Optional, defaults to 0 (no limit).","mergeMode":null,"subTypeDocs":[]},{"name":"xaProperties","typeDescription":"Map name ->  value","propertyDescription":"Sets the properties (name,value pairs) used to\n      configure the XADataSource. Required.","mergeMode":"DEEP","subTypeDocs":[]},{"name":"minPoolSize","typeDescription":"int","propertyDescription":"Sets the minimum pool size. The amount of pooled connections won't go\n      below that value. The pool will open this amount of connections during\n      initialization. Optional, defaults to 1.","mergeMode":null,"subTypeDocs":[]},{"name":"borrowConnectionTimeout","typeDescription":"int","propertyDescription":"The maximum amount of time in seconds the pool will block\n      waiting for a connection to become available in the pool when it\n      is empty. Optional.\n     \n      Defaults to 30 seconds.","mergeMode":null,"subTypeDocs":[]},{"name":"domainOperations","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.domain.DomainOperations implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"reapTimeout","typeDescription":"int","propertyDescription":"Sets the amount of time (in seconds) that the connection pool will allow a connection\n      to be in use, before claiming it back. Optional.\n     \n      Default is 0 (no timeout).","mergeMode":null,"subTypeDocs":[]},{"name":"testQuery","typeDescription":"String","propertyDescription":"The SQL query or statement used to validate a connection before returning it. Optional.\n     \n      The SQL query or statement to validate the connection with. Note that\n      although you can specify updates here, these will NOT be part of any JTA transaction!","mergeMode":null,"subTypeDocs":[]},{"name":"schemaService","typeDescription":"String","propertyDescription":"Spring bean name of a de.quinscape.exceed.runtime.schema.SchemaService implementation. The system provides\n      <code>\"defaultSchemaService\"<\/code> and <code>\"noopSchemaService\"<\/code>","mergeMode":null,"subTypeDocs":[]},{"name":"localTransactionMode","typeDescription":"boolean","propertyDescription":"The default isolation level of connections returned by this datasource.\n      Optional, defaults to the vendor-specific JDBC or DBMS settings.","mergeMode":null,"subTypeDocs":[]},{"name":"loginTimeout","typeDescription":"int","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]},{"name":"maxPoolSize","typeDescription":"int","propertyDescription":"The maximum pool size. The amount of pooled connections won't go\n      above this value. Optional, defaults to 1.","mergeMode":null,"subTypeDocs":[]},{"name":"schemaUpdate","typeDescription":"SchemaUpdateMode Enum","propertyDescription":"Controls automatic schema updates for the data source.\n      @param schemaUpdateMode<br/>Values: NONE, DUMP, UPDATE","mergeMode":null,"subTypeDocs":[]},{"name":"namingStrategy","typeDescription":"String","propertyDescription":"The spring bean name of a de.quinscape.exceed.runtime.domain.NamingStrategy implementation.","mergeMode":null,"subTypeDocs":[]},{"name":"primary","typeDescription":"boolean","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]}],"type":"xcd.staging.AtomikosDataSourceModel","mergeMode":"DEEP","locationDescription":"","classDescription":"Wraps a AtomikosDataSourceBean, either ignoring or converting properties that are inconveniently typed for our model word.\n \n  <ul>\n      <li>Properties-typed properties are converted from Map<String,String><\/li>\n      <li>Non-JSONable properties are just ignored. If you need those, implement an alternative data source factory implementation<\/li>\n  <\/ul>\n  <p>\n      The property description have been taken from the atomikos data source bean documentation\n  <\/p>"},"xcd.config.ApplicationConfig":{"propertyDocs":[{"name":"schema","typeDescription":"String","propertyDescription":"Database schema for this application\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"sessionContext","typeDescription":"ContextModel","propertyDescription":"The session context model. Each property in it will exist once per user session.","mergeMode":"DEEP","subTypeDocs":["xcd.context.ContextModel"]},{"name":"supportedLocales","typeDescription":"Array","propertyDescription":"Array of normalized locale specifications to support for this application.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"decimalConfig","typeDescription":"DecimalConfig","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.config.DecimalConfig"]},{"name":"componentConfig","typeDescription":"ComponentConfig","propertyDescription":null,"mergeMode":"REPLACE","subTypeDocs":["xcd.config.ComponentConfig"]},{"name":"applicationContext","typeDescription":"ContextModel","propertyDescription":"The application context for this application. Each property will exist once per application.","mergeMode":"REPLACE","subTypeDocs":["xcd.context.ContextModel"]},{"name":"defaultCurrency","typeDescription":"String","propertyDescription":"Default currency for the application (three letter code)\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"defaultUsers","typeDescription":"Map userName ->  Set of role string","propertyDescription":"Configuration for the default user accounts. Maps user names to a set of role names.","mergeMode":"DEEP","subTypeDocs":[]},{"name":"authSchema","typeDescription":"String","propertyDescription":"Schema to store the application users for this app in. Defaults to the same as the schema property.\n     \n      Can be used to have multiple applications that share the user pool.","mergeMode":null,"subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"defaultLayout","typeDescription":"String","propertyDescription":"Returns the default layout for this application.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"userContext","typeDescription":"ContextModel","propertyDescription":"The user context model. Each property will exists once for every user / login.","mergeMode":"DEEP","subTypeDocs":["xcd.context.ContextModel"]},{"name":"defaultDataSource","typeDescription":"String","propertyDescription":"The name of the default data source for normal domain types.","mergeMode":null,"subTypeDocs":[]},{"name":"styleSheets","typeDescription":"Array of String","propertyDescription":"Stylesheets resource paths for this application\n     \n      ","mergeMode":"REPLACE","subTypeDocs":[]}],"type":"xcd.config.ApplicationConfig","mergeMode":"DEEP","locationDescription":"/models/config.json","classDescription":"Encapsulates general application configuration. Corresponds to the \"/models/config.json\" resource."},"xcd.domain.StateMachine":{"propertyDocs":[{"name":"name","typeDescription":"String","propertyDescription":"Name of the state machine","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description of this state machine","mergeMode":null,"subTypeDocs":[]},{"name":"startState","typeDescription":"String","propertyDescription":"Sets the start state for this state machine.\n     \n      @param startState    start state","mergeMode":null,"subTypeDocs":[]},{"name":"states","typeDescription":"Map key -> List","propertyDescription":"Sets the map of all states to valid state names to transition to.","mergeMode":"REPLACE","subTypeDocs":[]}],"type":"xcd.domain.StateMachine","mergeMode":"REPLACE","locationDescription":"/models/domain/state-machine/","classDescription":"Simple finite state machine implementation that is basically a structured enum type.\n \n <p>\n      Each state machine has a number of states and each state a number of valid transitions to other state. \n <\/p>"},"xcd.startup.ExceedConfig":{"propertyDocs":[{"name":"defaultApp","typeDescription":"String","propertyDescription":"Default application for the exceed application container. Default is the first application.","mergeMode":null,"subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"env","typeDescription":"Map key ->  Map","propertyDescription":"Env properties provided by the startup.json\n     \n      ","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"apps","typeDescription":"Array of AppState","propertyDescription":"Array of application definitions\n      ","mergeMode":"REPLACE","subTypeDocs":["xcd.startup.AppState"]}],"type":"xcd.startup.ExceedConfig","mergeMode":"REPLACE","locationDescription":"","classDescription":"Java container for the exceed app container configuration in <code><\/code>/WEB-INF/cfg/startup.json<\/code>"},"xcd.process.Process":{"propertyDocs":[{"name":"startTransition","typeDescription":"Transition","propertyDescription":"Transition be executed when the process is entered.","mergeMode":"REPLACE","subTypeDocs":["xcd.process.Transition"]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"context","typeDescription":"ContextModel","propertyDescription":"Process context. Each property in it will exist once per execution of the process. The server remembers past\n      process contexts to continue work at this point when the user returns to another view with browser history\n      navigation.","mergeMode":"REPLACE","subTypeDocs":["xcd.context.ContextModel"]},{"name":"states","typeDescription":"Map stateName -> ProcessState","propertyDescription":"Process states of the process.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":["xcd.process.ViewState","xcd.process.DecisionState"]}],"type":"xcd.process.Process","mergeMode":"REPLACE","locationDescription":"/models/process/","classDescription":"Exceed process model"},"xcd.domain.EnumType":{"propertyDocs":[{"name":"values","typeDescription":"Array of String","propertyDescription":"String values for this enum\n      ","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description for the enum type.","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.domain.EnumType","mergeMode":"REPLACE","locationDescription":"/models/domain/enum/","classDescription":null},"xcd.context.ScopedPropertyModel":{"propertyDocs":[{"name":"private","typeDescription":"boolean","propertyDescription":"Returns <code>true<\/code> if the scope property is supposed to be private, that is it is only visible inside\n      the process. It is not accepting input from the outside / a parent process nor is it accessible as\n      sub process output.\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"defaultValue","typeDescription":"Expression","propertyDescription":"The default value expression for this scoped property.","mergeMode":null,"subTypeDocs":[]},{"name":"name","typeDescription":"String","propertyDescription":"The name of the scoped property. Must be unique for all scope locations, i.e. within the combination of all\n      applicable scopes the each context.","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Description of this scoped property","mergeMode":null,"subTypeDocs":[]},{"name":"typeParam","typeDescription":"String","propertyDescription":"Property type specific type parameter:\n      <ul>\n          <li>\n               For the simple property types, this is <code>null<\/code>,\n          <\/li>\n          <li>\n               For the <code>DomainType<\/code> type this is the name of the property type.\n          <\/li>\n          <li>\n               For the <code>Map<\/code> and <code>List<\/code> types the type param is either\n               a domain type name or a property type name.\n          <\/li>\n      <\/p>","mergeMode":null,"subTypeDocs":[]},{"name":"type","typeDescription":"String","propertyDescription":"The property type of the scoped property.\n     \n      @see PropertyType#DOMAIN_TYPE\n      @see PropertyType#MAP\n      @see PropertyType#LIST\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"config","typeDescription":"Map key ->  Map","propertyDescription":"Property type config","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"required","typeDescription":"boolean","propertyDescription":"Set  to <code>true<\/code> for a requires / not nullable property.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"maxLength","typeDescription":"int","propertyDescription":"For <code>PlainText<\/code> and  <code>RichText<\/code> type, this defines the maximum number of characters.\n      If it is less or equal to 0, the property is unbounded.\n      ","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.context.ScopedPropertyModel","mergeMode":"REPLACE","locationDescription":"","classDescription":"A single scoped property value within a scope."},"xcd.view.View":{"propertyDocs":[{"name":"domainType","typeDescription":"String","propertyDescription":"Domain type of the <code>\"current\"<\/code> reference in this view.\n     \n      @param domainType","mergeMode":null,"subTypeDocs":[]},{"name":"title","typeDescription":"Expression","propertyDescription":"Title of this view. Can be either a normal string attribute or an expression.","mergeMode":null,"subTypeDocs":[]},{"name":"content","typeDescription":"Map contentName -> ComponentModel","propertyDescription":"Returns the complete content map of this view. The default content is called \"main\". The \"root\" content will imported\n      from the layout, by default it just imports the \"main\" slot.\n     \n      ","mergeMode":"REPLACE","subTypeDocs":["xcd.view.ComponentModel"]},{"name":"layout","typeDescription":"String","propertyDescription":"Name of the layout to use for this view. If not set, the application default layout will be used.","mergeMode":null,"subTypeDocs":[]},{"name":"context","typeDescription":"ContextModel","propertyDescription":"The view context model. Each property in it will exist within the view. Note that additional properties might\n      be added from the layout used.","mergeMode":"REPLACE","subTypeDocs":["xcd.context.ContextModel"]}],"type":"xcd.view.View","mergeMode":"REPLACE","locationDescription":"/models/view/ or /models/process/*/view","classDescription":"Represents a view model within an exceed application\n \n  The persistent JSON output for this model generated by  {@link de.quinscape.exceed.runtime.model.ClientViewJSONGenerator#toJSON(de.quinscape.exceed.model.ApplicationModel, View, JSONFormat)}  }."},"xcd.domain.property.ForeignKeyDefinition":{"propertyDocs":[{"name":"property","typeDescription":"String","propertyDescription":"Target property name. Default is <code>id<\/code>,","mergeMode":null,"subTypeDocs":[]},{"name":"type","typeDescription":"String","propertyDescription":"Target domain type name","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.domain.property.ForeignKeyDefinition","mergeMode":"REPLACE","locationDescription":"","classDescription":"Domain foreign key definition.\n \n  Note that not all StorageConfiguration might support foreign keys."},"xcd.component.PropDeclaration":{"propertyDocs":[{"name":"defaultValue","typeDescription":"Expression","propertyDescription":"Default value for this prop.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"contextType","typeDescription":"String","propertyDescription":"Type of context this prop declaration is dependent on.","mergeMode":null,"subTypeDocs":[]},{"name":"description","typeDescription":"String","propertyDescription":"Prop declaration description for autocomplete purposes.","mergeMode":null,"subTypeDocs":[]},{"name":"rule","typeDescription":"Expression","propertyDescription":"Completion rule for this prop. Wizard dialogs can be specified by setting ComponentDescriptor#componentPropWizards","mergeMode":null,"subTypeDocs":[]},{"name":"client","typeDescription":"boolean","propertyDescription":"<code>true<\/code> if this prop is visible to the client as a value. Some props are only needed for server\n      operation and / or might contain expression types not available on the client per-se. Setting this to\n      <code>false<\/code> will cause such an attribute to be only added as a comment.","mergeMode":null,"subTypeDocs":[]},{"name":"type","typeDescription":"PropType Enum","propertyDescription":"Proptype for for this prop.<br/>Values: PLAINTEXT, INTEGER, FLOAT, BOOLEAN, MAP, CLASSES, GLYPH_ICON, TRANSITION, FIELD_REFERENCE, DOMAIN_TYPE_REFERENCE, STATE_MACHINE_REFERENCE, QUERY_EXPRESSION, CURSOR_EXPRESSION, FILTER_EXPRESSION, VALUE_EXPRESSION, ACTION_EXPRESSION, CONTEXT_EXPRESSION","mergeMode":null,"subTypeDocs":[]},{"name":"required","typeDescription":"boolean","propertyDescription":"<code>true<\/code> if the prop is required for the component.","mergeMode":null,"subTypeDocs":[]}],"type":"xcd.component.PropDeclaration","mergeMode":"REPLACE","locationDescription":"","classDescription":"Declaration for a single property within a {@link ComponentDescriptor}."},"xcd.routing.RoutingTable":{"propertyDocs":[{"name":"name","typeDescription":"String","propertyDescription":"Name of the top level model.\n      ","mergeMode":null,"subTypeDocs":[]},{"name":"mappings","typeDescription":"Map routeTemplate -> Mapping","propertyDescription":"The mappings for this routing table. Maps a route template string with potential\n      place holders to a mapping model.","mergeMode":"DEEP","subTypeDocs":["xcd.routing.Mapping"]}],"type":"xcd.routing.RoutingTable","mergeMode":"DEEP","locationDescription":"/models/routing.json","classDescription":null},"xcd.view.ComponentModel":{"propertyDocs":[{"name":"name","typeDescription":"String","propertyDescription":"Component name. Following react conventions, all components with uppercase names are exceed components and\n      all components with lowercase names are normal HTML tags.","mergeMode":null,"subTypeDocs":[]},{"name":"attrs","typeDescription":"Map attributeName -> Attribute","propertyDescription":"Map of attribute values <code>\"value\"<\/code> or expressions <code>\"{ expr() }\"<\/code>.","mergeMode":"REPLACE","subTypeDocs":[]},{"name":"kids","typeDescription":"Array of ComponentModel","propertyDescription":"List of children of this component model.","mergeMode":"REPLACE","subTypeDocs":["xcd.view.ComponentModel"]}],"type":"xcd.view.ComponentModel","mergeMode":"REPLACE","locationDescription":"","classDescription":"A view component within an exceed application. Following the react conventions, it is a full-fledged Javascript react\n  component when its name is uppercase and a simple HTML tag if its name is lowercase."},"xcd.config.ComponentConfig":{"propertyDocs":[{"name":"baseTemplate","typeDescription":"BaseTemplateConfig","propertyDescription":null,"mergeMode":"DEEP","subTypeDocs":["xcd.config.BaseTemplateConfig"]},{"name":"serverRendering","typeDescription":"ServerRenderingMode Enum","propertyDescription":"Controls the server rendering mode for the application. Exceed can do a server-side reactjs prerendering\n      of the initial view for better SEO integration and faster UI. Since it comes with additional server overhead\n      it can be DISABLED or limited with PER_STRATEGY (in combination with \"serverRenderingStrategy\")\n     \n      <br/>Values: DISABLED, ALWAYS, PER_STRATEGY","mergeMode":null,"subTypeDocs":[]},{"name":"serverRenderingStrategy","typeDescription":"String","propertyDescription":"Spring bean name of a ServerRenderingStrategy implementation to control whether or not the user receives\n      a pre-rendered initial document. Must be used in combination with serverRenderingMode ServerRenderingMode#PER_STRATEGY\n     \n      ","mergeMode":null,"subTypeDocs":[]},{"name":"instantTextFields","typeDescription":"boolean","propertyDescription":null,"mergeMode":null,"subTypeDocs":[]}],"type":"xcd.config.ComponentConfig","mergeMode":"DEEP","locationDescription":"","classDescription":"Contains component configurations for the components within an exceed applications. Is embedded in\n  {@link ApplicationConfig}\n  <p>\n  This is were app-level configuration for system components is stored. This can be an actual component model\n  configuration or for another system component. It provides a typed and auto-documented set of configuration options\n  for these (system) components.\n  <\/p>\n  <p>\n      If you add  multiple properties for the same logical component, you should consider an intermediary container\n      component like {@link BaseTemplateConfig}. \n  <\/p>"}},"topLevelTypes":["xcd.startup.ExceedConfig","xcd.component.ComponentPackageDescriptor","xcd.config.ApplicationConfig","xcd.domain.DomainRule","xcd.domain.type.DomainTypeModel","xcd.domain.EnumType","xcd.view.LayoutModel","xcd.process.Process","xcd.domain.property.PropertyTypeModel","xcd.domain.type.QueryTypeModel","xcd.routing.RoutingTable","xcd.staging.StageModel","xcd.domain.StateMachine","xcd.view.View"]},"definitions":{"definitions":{"popCursor":{"chapter":"Form related expressions","returnTypeResolver":null,"function":true,"name":"popCursor","context":null,"description":"Shortens the path of a cursor by n levels, returning the cursor location to a parent or grandparent of the current location.","definitionRenderer":{},"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},{"name":null,"type":"Integer","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"transitionModel":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"transitionModel","context":null,"description":"The transition model for the given name","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"DomainType","typeParam":"xcd.process.Transition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"navigateTo":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"navigateTo","context":null,"description":"AJAX Navigation action within an exceed application. To be used in views without process.","definitionRenderer":null,"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},{"name":null,"type":"Map","typeParam":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"CLIENT_SIDE_ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"syslog":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"syslog","context":null,"description":"System log function. Server logs per slf4j, client to the console API","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":true},"error":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"error","context":null,"description":"An action that executes the given transition","definitionRenderer":null,"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"when":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"when","context":null,"description":"A conditional branch in the action promise chain","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"BUILTIN","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"delete":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"delete","context":null,"description":"Deletes the given domain objects","definitionRenderer":null,"parameterModels":[{"name":null,"type":"DomainType","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":true},"uuid":{"chapter":"Domain Object related expressions","returnTypeResolver":null,"function":true,"name":"uuid","context":null,"description":"Creates a new UUID type 4 value","definitionRenderer":{},"parameterModels":[],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"cast":{"chapter":"misc","returnTypeResolver":{},"function":true,"name":"cast","context":null,"description":"Casts a value to another type if possible. Useful to e.g. convert one Enum to another or an Integer to an Enum.","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":null,"varArgs":false},"actionQuery":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"actionQuery","context":null,"description":"Action query embedded in a server-side expression","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Expression","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"DataGraph","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"param":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"param","context":null,"description":"Mapping parameter","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"alert":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"alert","context":null,"description":"Client-side bootstrap alert","definitionRenderer":null,"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"CLIENT_SIDE_ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"newObject":{"chapter":"Domain Object related expressions","returnTypeResolver":{},"function":true,"name":"newObject","context":null,"description":"Create a new object of the given type","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":null,"varArgs":false},"now":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"now","context":null,"description":"The current timestamp","definitionRenderer":{},"parameterModels":[],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"Timestamp","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"merge":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"merge","context":null,"description":"Merges the give domain object with its persistent state, i.e. it fills in all the missing null values","definitionRenderer":null,"parameterModels":[{"name":null,"type":"DomainType","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"DomainType","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"context":{"chapter":"Component Expressions","resolver":{},"propertyType":null,"function":false,"name":"context","description":"The current cursor context or transition context.","definitionRenderer":null,"type":"BUILTIN","definitionType":"BUILTIN"},"model":{"chapter":"Component Expressions","resolver":null,"propertyType":{"name":null,"type":"DomainType","typeParam":"xcd.view.ComponentModel","required":false,"maxLength":0,"description":null,"unique":false},"function":false,"name":"model","description":"A reference to the current model","definitionRenderer":null,"type":"BUILTIN","definitionType":"BUILTIN"},"catch":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"catch","context":null,"description":"Allows to declare a sub action sequence to execute as rejection handler","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"BUILTIN","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"vars":{"chapter":"Component Expressions","resolver":{},"propertyType":null,"function":false,"name":"vars","description":"In a component expression, the current vars of the component","definitionRenderer":null,"type":"BUILTIN","definitionType":"BUILTIN"},"fieldId":{"chapter":"Form related expressions","returnTypeResolver":null,"function":true,"name":"fieldId","context":null,"description":"Returns the correct field id for fields in iterative contexts","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"debug":{"chapter":"misc","returnTypeResolver":{},"function":true,"name":"debug","context":null,"description":"Helper function that will debug log its arguments and return the first argument","definitionRenderer":{},"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":null,"varArgs":false},"lazyDependency":{"chapter":"Component Expressions","returnTypeResolver":null,"function":true,"name":"lazyDependency","context":null,"description":"Marks first the expression argument as being lazily evaluated in terms of context dependency updates.The user can change the context variables within without it triggering view updates.","definitionRenderer":{},"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"query":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"query","context":null,"description":"Query embedded in a server-side expression","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Expression","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"DataGraph","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"isAdmin":{"chapter":"security expressions","returnTypeResolver":null,"function":true,"name":"isAdmin","context":null,"description":"Checks if the current user has the admin role. Same as hasRole('ROLE_ADMIN').","definitionRenderer":{},"parameterModels":[],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"Boolean","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"isNew":{"chapter":"Domain Object related expressions","returnTypeResolver":null,"function":true,"name":"isNew","context":null,"description":"Checks if the given domain object is new i.e. has a null identity","definitionRenderer":{},"parameterModels":[{"name":null,"type":"DomainType","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"Boolean","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"store":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"store","context":null,"description":"Stores the given domain object","definitionRenderer":null,"parameterModels":[{"name":null,"type":"DomainType","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":true},"uri":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"uri","context":null,"description":"Inner-application URI function, takes a template and map of template values as arguments","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},{"name":null,"type":"Map","typeParam":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"i18n":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"i18n","context":null,"description":"First argument is the translation tag followed by values for its placeholders","definitionRenderer":null,"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":true},"transition":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"transition","context":null,"description":"An action that executes the given transition","definitionRenderer":null,"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"CLIENT_SIDE_ACTION","returnType":{"name":null,"type":"Void","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"props":{"chapter":"Component Expressions","resolver":{},"propertyType":null,"function":false,"name":"props","description":"In a component expression, the props/attributes of the component (e.g. props.name)","definitionRenderer":null,"type":"BUILTIN","definitionType":"BUILTIN"},"fork":{"chapter":"Action expressions","returnTypeResolver":null,"function":true,"name":"fork","context":null,"description":"Special action function that takes multiple sequences as input, runs them in parallel and waits for all of them to end.","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":"ACTION","definitionType":"BUILTIN","returnType":{"name":null,"type":"List","typeParam":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":true},"hasRole":{"chapter":"security expressions","returnTypeResolver":null,"function":true,"name":"hasRole","context":null,"description":"Checks if the current user has the given role.","definitionRenderer":{},"parameterModels":[{"name":null,"type":"PlainText","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"BUILTIN","returnType":{"name":null,"type":"Boolean","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false}}},"QueryFilterOperations":{"definitions":{"Field.greaterThan":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.greaterThan","context":"org.jooq.Field","description":"JOOQ Field method greaterThan","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.notLike":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.notLike","context":"org.jooq.Field","description":"JOOQ Field method notLike","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.isNotDistinctFrom":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.isNotDistinctFrom","context":"org.jooq.Field","description":"JOOQ Field method isNotDistinctFrom","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.ge":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.ge","context":"org.jooq.Field","description":"JOOQ Field method ge","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.isFalse":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.isFalse","context":"org.jooq.Field","description":"JOOQ Field method isFalse","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.notEqual":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.notEqual","context":"org.jooq.Field","description":"JOOQ Field method notEqual","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.lessThan":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.lessThan","context":"org.jooq.Field","description":"JOOQ Field method lessThan","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.equalIgnoreCase":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.equalIgnoreCase","context":"org.jooq.Field","description":"JOOQ Field method equalIgnoreCase","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.isNull":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.isNull","context":"org.jooq.Field","description":"JOOQ Field method isNull","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.like":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.like","context":"org.jooq.Field","description":"JOOQ Field method like","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"prop":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"prop","context":null,"description":"Returns a component attribute value. Only valid in component contexts.","definitionRenderer":null,"parameterModels":[{"name":"name","type":"String","required":false,"maxLength":0,"description":"Component attribute to read","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.lessOrEqual":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.lessOrEqual","context":"org.jooq.Field","description":"JOOQ Field method lessOrEqual","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.isTrue":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.isTrue","context":"org.jooq.Field","description":"JOOQ Field method isTrue","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.endsWith":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.endsWith","context":"org.jooq.Field","description":"JOOQ Field method endsWith","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.notLikeRegex":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.notLikeRegex","context":"org.jooq.Field","description":"JOOQ Field method notLikeRegex","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.lt":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.lt","context":"org.jooq.Field","description":"JOOQ Field method lt","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.startsWith":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.startsWith","context":"org.jooq.Field","description":"JOOQ Field method startsWith","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.notEqualIgnoreCase":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.notEqualIgnoreCase","context":"org.jooq.Field","description":"JOOQ Field method notEqualIgnoreCase","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.contains":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.contains","context":"org.jooq.Field","description":"JOOQ Field method contains","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.isNotNull":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.isNotNull","context":"org.jooq.Field","description":"JOOQ Field method isNotNull","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"combineChildFilters":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"combineChildFilters","context":null,"description":"Returns a new condition combining child filter values. This is used e.g. to combine all the user-input controlled\n      filters of a data grid columns.","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.ne":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.ne","context":"org.jooq.Field","description":"JOOQ Field method ne","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.greaterOrEqual":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.greaterOrEqual","context":"org.jooq.Field","description":"JOOQ Field method greaterOrEqual","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"field":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"field","context":null,"description":"Resolves the field with the given name. This is equivalent to just using the field name as identifier.\n      \n      <pre class=\"text-info\"> field('name') == 0 <\/pre>\n     \n      is the same as\n     \n      <pre class=\"text-info\"> name == 0 <\/pre>","definitionRenderer":null,"parameterModels":[{"name":"name","type":"String","required":false,"maxLength":0,"description":"Field name","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"filterValue":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"filterValue","context":null,"description":"Returns the current filter value for the current column/field component context. Useful for component filters or\n      filter templates.","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.isDistinctFrom":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.isDistinctFrom","context":"org.jooq.Field","description":"JOOQ Field method isDistinctFrom","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.notLikeIgnoreCase":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.notLikeIgnoreCase","context":"org.jooq.Field","description":"JOOQ Field method notLikeIgnoreCase","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.le":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.le","context":"org.jooq.Field","description":"JOOQ Field method le","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.equal":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.equal","context":"org.jooq.Field","description":"JOOQ Field method equal","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.eq":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.eq","context":"org.jooq.Field","description":"JOOQ Field method eq","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.gt":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.gt","context":"org.jooq.Field","description":"JOOQ Field method gt","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.likeIgnoreCase":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.likeIgnoreCase","context":"org.jooq.Field","description":"JOOQ Field method likeIgnoreCase","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Field.likeRegex":{"chapter":"Field","returnTypeResolver":null,"function":true,"name":"Field.likeRegex","context":"org.jooq.Field","description":"JOOQ Field method likeRegex","definitionRenderer":null,"parameterModels":[{"name":null,"type":"Field","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Condition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false}}},"QueryTransformerOperations":{"definitions":{"QueryDomainType.naturalJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.naturalJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Natural-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to natural join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"formFieldType":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"formFieldType","context":null,"description":"Returns the property type of a form field component. Only valid in a form field component context.","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"PropertyModel","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.fullOuterJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.fullOuterJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Full-outer-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to full outer join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"domainType":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"domainType","context":null,"description":"Returns a query domain type definition for the given name argument. This is a generic function and equivalent\n      to just using the name of the domain type as Identifier.\n     \n      <pre class=\"text-info\"> domainType('Foo') <\/pre> is the same as\n      \n      <pre class=\"text-info\"> Foo <\/pre>","definitionRenderer":null,"parameterModels":[{"name":"domainType","type":"String","required":false,"maxLength":0,"description":"Name of the domain type","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDomainType","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDefinition.limit":{"chapter":"QueryDefinition","returnTypeResolver":null,"function":true,"name":"QueryDefinition.limit","context":"de.quinscape.exceed.runtime.expression.query.QueryDefinition","description":"Sets the limit for the current query definition.","definitionRenderer":null,"parameterModels":[{"name":"limit","type":"int","required":false,"maxLength":0,"description":"Sets the limit for the number of queries rows, activates query pagination","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"when":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"when","context":null,"description":"Conditional query function.\n      <pre class=\"text-info\"> when( <em>condition<\/em> ).then( <em>queryDefinition<\/em> ) <\/pre>\n     \n      or\n\n      <pre class=\"text-info\"> when( <em>condition<\/em> ).then( <em>queryDefinition<\/em> ).else( <em>queryDefinition<\/em> ) <\/pre>","definitionRenderer":null,"parameterModels":[{"name":"condition","type":"boolean","required":false,"maxLength":0,"description":"Condition for the conditional query","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Conditional","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDefinition.orderBy":{"chapter":"QueryDefinition","returnTypeResolver":null,"function":true,"name":"QueryDefinition.orderBy","context":"de.quinscape.exceed.runtime.expression.query.QueryDefinition","description":"Defines the order for the current query definition.","definitionRenderer":null,"parameterModels":[{"name":"fields","type":"Field...","required":false,"maxLength":0,"description":"Sets the field by which the query is ordered","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.naturalLeftOuterJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.naturalLeftOuterJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Natural-Left-Outer-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to natural left outer join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"actionQuery":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"actionQuery","context":null,"description":"Executes an action and returns the result. Can be used to implement Java-Based DataGraph returning actions.","definitionRenderer":null,"parameterModels":[{"name":"actionName","type":"String","required":false,"maxLength":0,"description":"Action to execute","unique":false},{"name":"actionParams","type":"Object...","required":false,"maxLength":0,"description":"Parameters that must valid for the action being executed","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Conditional.else":{"chapter":"Conditional","returnTypeResolver":null,"function":true,"name":"Conditional.else","context":"de.quinscape.exceed.runtime.expression.query.Conditional","description":"Else branch in a conditional query definition. Takes a query definition as argument.","definitionRenderer":null,"parameterModels":[{"name":"elseValue","type":"Object","required":false,"maxLength":0,"description":"Value to use when the condition is false","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"param":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"param","context":null,"description":"Returns the location parameter with the given name.","definitionRenderer":null,"parameterModels":[{"name":null,"type":"String","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.naturalRightOuterJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.naturalRightOuterJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Natural-Right-Outer-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to natural right outer join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"prop":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"prop","context":null,"description":"Returns the component attribute with the given name. Only valid in a component context.","definitionRenderer":null,"parameterModels":[{"name":"name","type":"String","required":false,"maxLength":0,"description":"The name of the component attribute to read","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDefinition.filter":{"chapter":"QueryDefinition","returnTypeResolver":null,"function":true,"name":"QueryDefinition.filter","context":"de.quinscape.exceed.runtime.expression.query.QueryDefinition","description":"Defines the filter for the current query definition. The argument will be transformed as filter expression.","definitionRenderer":null,"parameterModels":[{"name":"expr","type":"Expression","required":false,"maxLength":0,"description":"Filter expression","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.as":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.as","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Defines an alias for the current query domain type definition.","definitionRenderer":null,"parameterModels":[{"name":"alias","type":"String","required":false,"maxLength":0,"description":"Alias for the query domain type in this query. Used to both shorten queries and to disambiguate multiple occurrences of the same type.","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDomainType","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.rightOuterJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.rightOuterJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Right-outer-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to right outer join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.leftOuterJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.leftOuterJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Left-outer-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to left outer join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.join":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.join","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDefinition.offset":{"chapter":"QueryDefinition","returnTypeResolver":null,"function":true,"name":"QueryDefinition.offset","context":"de.quinscape.exceed.runtime.expression.query.QueryDefinition","description":"Sets the offset for the current query definition.","definitionRenderer":null,"parameterModels":[{"name":"limit","type":"int","required":false,"maxLength":0,"description":"Sets the offset for the number of queries rows","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.query":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.query","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Constructs a query definition for this query domain type definition.","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"var":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"var","context":null,"description":"Returns the component variable with the given name. Only valid in a component context.","definitionRenderer":null,"parameterModels":[{"name":null,"type":"String","required":false,"maxLength":0,"description":null,"unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"appName":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"appName","context":null,"description":"Returns the name of the current application.","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"String","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"query":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"query","context":null,"description":"Constructs a query definition taking a  query domain type definition as argument.","definitionRenderer":null,"parameterModels":[{"name":"queryDomainType","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to query","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"JoinDefinition.on":{"chapter":"JoinDefinition","returnTypeResolver":null,"function":true,"name":"JoinDefinition.on","context":"de.quinscape.exceed.runtime.expression.query.JoinDefinition","description":"Defines the query condition for a join definition. The argument will be transformed as filter expression.","definitionRenderer":null,"parameterModels":[{"name":"expr","type":"Expression","required":false,"maxLength":0,"description":"Join condition expression","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDomainType","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDefinition.params":{"chapter":"QueryDefinition","returnTypeResolver":null,"function":true,"name":"QueryDefinition.params","context":"de.quinscape.exceed.runtime.expression.query.QueryDefinition","description":"Defines parameters for the current query definition. Takes a map mapping paramtern names to parameter values.","definitionRenderer":null,"parameterModels":[{"name":"params","type":"Map","required":false,"maxLength":0,"description":"Sets query parameters for this query definition","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"Conditional.then":{"chapter":"Conditional","returnTypeResolver":null,"function":true,"name":"Conditional.then","context":"de.quinscape.exceed.runtime.expression.query.Conditional","description":"Then branch in a conditional query definition. Takes a query definition as argument.","definitionRenderer":null,"parameterModels":[{"name":"thenValue","type":"Object","required":false,"maxLength":0,"description":"Value to use when the condition is true","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.fields":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.fields","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Selects the given fields for the current query domain type definition.","definitionRenderer":null,"parameterModels":[{"name":"fields","type":"Field...","required":false,"maxLength":0,"description":"Fields to select","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"QueryDomainType","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"QueryDomainType.crossJoin":{"chapter":"QueryDomainType","returnTypeResolver":null,"function":true,"name":"QueryDomainType.crossJoin","context":"de.quinscape.exceed.runtime.expression.query.QueryDomainType","description":"Cross-joins the current domain type with another query domain type given as argument.","definitionRenderer":null,"parameterModels":[{"name":"other","type":"QueryDomainType","required":false,"maxLength":0,"description":"Query domain type definition to cross join","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"JoinDefinition","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"childFieldRefs":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"childFieldRefs","context":null,"description":"Returns a list of all child components field referenec attributes ( attributes with prop type FIELD_REFERENCE).\n      Only valid in a component context.","definitionRenderer":null,"parameterModels":[],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"List","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false},"exec":{"chapter":"misc","returnTypeResolver":null,"function":true,"name":"exec","context":null,"description":"Executes a query definition and returns the result value. Normally this will be a data graph.","definitionRenderer":null,"parameterModels":[{"name":"queryDefinition","type":"QueryDefinition","required":false,"maxLength":0,"description":"Query definition to execute","unique":false}],"restrictedTo":null,"definitionType":"QUERY_FILTER","returnType":{"name":null,"type":"Object","required":false,"maxLength":0,"description":null,"unique":false},"varArgs":false}}}}