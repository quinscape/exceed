{
    "components": {
        "DataGrid": {

            "classes" : [ "element", "iterative-context", "model-aware", "visible-if" ],

            "vars": {
                "orderBy": "prop('orderBy')",
                "filter": "{}",
                "offset": "0",
                "limit": "prop('limit')"
            },
            "queries": {
                "result": "query( prop('type').fields(childModelNames()) ).filter( prop('filter') && combineChildFilters() ).orderBy( var('orderBy') ).limit( var('limit') ).offset( var('offset'))"
            },
            "propTypes": {
                "type": {
                    "client": false,
                    "type" : "QUERY_EXPRESSION",
                    "rule" : "domainType()"
                },
                "orderBy": {
                    "client": false,
                    "rule": "fieldListOf(query(prop('type')))"
                },
                "filter": {
                    "client": false,
                    "rule": "filterExpr(query(prop('type')))"
                },
                "limit": {
                    "client": false,
                    "type": "INTEGER"
                }
            },
            "propWizards" : {
                "type": {
                    "wizard": "DataGridTypeWizard",
                    "title": "Configure Query",
                    "description": "Open Query join dialog for complex queries"
                }
            },
            "providesContext" : "DataListCursor",
            "childRule" : "component('DataGrid.Column')",
            "parentRule" : "!parentHasClass('iterative-context')"
        },
        "DataGrid.Column": {
            "providesContext" : "DataGrid.Field",
            "propTypes": {
                "name": {
                    "rule": "fieldOf(parent.prop('type'))",
                    "required" : true
                },
                "filterTemplate": {
                    "type": "FILTER_EXPRESSION",
                    "defaultValue" : "{ field().contains(filterValue()) }",
                    "client" : false
                },
                "heading": {
                    "type": "PLAINTEXT"
                },

                "context" : {
                    "context": "context.getCursor(props.name)",
                    "contextType" : "DataListCursor"
                }
            },
            "templates" : [{
                "wizard" : "DataGridColumnWizard",
                "title" : "configure..."

            }],
            "childRule" : "hasClass('element')"
        }
    }
}
