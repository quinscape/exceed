{
    "components": {
        "Form": {
            "classes": ["element"],
            "queries": {
                "data": "query( prop('type').fields(childAttributes('field', 'value'))).filter( prop('filter') )"
            },
            "propTypes": {
                "data": {
                    "type": "CURSOR_EXPRESSION"
                },
                "type": {
                    "client": false,
                    "type": "QUERY_EXPRESSION",
                    "rule": "domainType()",
                    "required" : true
                },
                "filter": {
                    "client": false,
                    "type" : "FILTER_EXPRESSION",
                    "rule": "filterExpr(query(prop('type')))",
                    "required" : true
                },
                "horizontal": {
                    "type": "BOOLEAN"
                },
                "labelClass": {
                    "type": "CLASSES",
                    "description" : "HTML classes to apply to the label element"
                },
                "wrapperClass": {
                    "type": "CLASSES",
                    "description" : "HTML classes to apply to the field wrapper element in horizontal mode"
                }
            },
            "providesContext": "DataListCursor",
            "childRule": "hasClass('element') || hasClass('field')",
            "parentRule": "!parentHasClass('iterative-context')"
        },
        "FormBlock": {
            "classes": ["element"],
            "propTypes": {
                "horizontal": {
                    "type": "BOOLEAN"
                },
                "labelClass": {
                    "type": "CLASSES",
                    "description" : "HTML classes to apply to the label element"
                },
                "wrapperClass": {
                    "type": "CLASSES",
                    "description" : "HTML classes to apply to the field wrapper element in horizontal mode"
                }
            },
            "providesContext": "DataList",
            "childRule": "hasClass('element') || hasClass('field')",
            "parentRule": "!parentHasClass('iterative-context')"
        },
        "StaticText": {
            "classes": ["field", "element"],
            "propTypes": {
                "context" : {
                    "context": true,
                    "contextType" : "DataListCursor"
                },
                "value": {
                    "rule": "fieldOf(parent.prop('type'))",
                    "type": "CURSOR_EXPRESSION",
                    "required" : true
                },
                "wrapperClass" : {
                    "type" : "CLASSES"
                },
                "labelClass" : {
                    "type" : "CLASSES"
                }
            },
            "providesContext": "DataListCursor"
        },
        "Field": {
            "classes": ["element", "field"],
            "propTypes": {
                "context" : {
                    "context": true,
                    "contextType" : "DataListCursor"
                },
                "value": {
                    "rule": "fieldOf(parent.prop('type'))",
                    "type": "CURSOR_EXPRESSION",
                    "required" : true
                },
                "wrapperClass" : {
                    "type" : "CLASSES"
                },
                "labelClass" : {
                    "type" : "CLASSES"
                }
            }
        },
        "SelectField": {
            "classes": ["element", "field"],
            "queries": {
                "data": "query( prop('type') )"
            },
            "propTypes": {
                "context" : {
                    "context": true,
                    "contextType" : "DataListCursor"
                },
                "data": {
                    "type": "CURSOR_EXPRESSION"
                },

                "value": {
                    "rule": "fieldOf(parent.prop('type'))",
                    "type": "CURSOR_EXPRESSION",
                    "required" : true
                },

                "wrapperClass" : {
                    "type" : "CLASSES"
                },
                "labelClass" : {
                    "type" : "CLASSES"
                },
                "type": {
                    "client": false,
                    "type": "QUERY_EXPRESSION",
                    "rule": "domainType()",
                    "required" : true
                },

                "optionDisplay": {
                    "rule": "fieldOf(prop('type'))",
                    "type": "CURSOR_EXPRESSION",
                    "description" : "Cursor expression to resolve the display value for an option. If not given only optionValue is used."

                },
                "optionValue": {
                    "rule": "fieldOf(prop('type'))",
                    "type": "CURSOR_EXPRESSION",
                    "required" : true,
                    "description" : "Cursor expression to resolve the value for an option"
                }
            }
        },

        "Button": {
            "classes": ["element", "field", "toolbar-child"],
            "parentRule" : "!viewInProcess()",
            "propTypes": {
                "context": {
                    "context" : true,
                    "contextType" : "DataListCursor"
                },
                "action" : {
                    "type" : "ACTION_EXPRESSION",
                    "required" : true
                },
                "text" : {
                    "required" : true,
                    "type" : "PLAINTEXT"
                }
            }
        },
        "TButton": {
            "classes": ["element", "field", "toolbar-child"],
            "parentRule" : "viewInProcess()",
            "propTypes": {
                "context": {
                    "context": true,
                    "contextType" : "DataListCursor",
                    "required" : false
                },
                "transition" : {
                    "description" : "Name of the transition to be execute from this button.",
                    "rule": "transitionNames()",
                    "type" : "TRANSITION",
                    "required" : true
                },
                "domainType" : {
                    "description" : "Defines the domain type to use for this button when it is ambiguous",
                    "rule": "",
                    "type" : "TRANSITION",
                    "required" : true
                },
                "discard" : {
                    "type" : "BOOLEAN",
                    "defaultValue" : "transition(props.transition).discard"
                },
                "text" : {
                    "required" : true,
                    "type" : "PLAINTEXT"
                }
            }
        },
        "Toolbar": {
            "classes": ["element"],
            "childRule": "hasClass('toolbar-child')"
        },
        "Toolbar.Separator" : {
            "classes": ["toolbar-child"]
        }
    }
}
