/* Generated By:JJTree&JavaCC: Do not edit this line. ExpressionParserConstants.java */
package de.quinscape.exceed.expression;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NULL = 7;
  /** RegularExpression Id. */
  int BOOLEAN_LITERAL = 8;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 9;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 10;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 11;
  /** RegularExpression Id. */
  int EXPONENT = 12;
  /** RegularExpression Id. */
  int HEX_LITERAL = 13;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 14;
  /** RegularExpression Id. */
  int IDENTIFIER = 15;
  /** RegularExpression Id. */
  int LETTER = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int SQUOTED_STRING = 18;
  /** RegularExpression Id. */
  int SQ_ALLOWABLE_CHARACTERS = 19;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"null\"",
    "<BOOLEAN_LITERAL>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<SQUOTED_STRING>",
    "<SQ_ALLOWABLE_CHARACTERS>",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\",\"",
  };

}
